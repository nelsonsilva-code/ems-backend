openapi: "3.1.0"
info:
  title: "ems-backend API"
  description: "ems-backend API"
  version: "1.0.0"
servers:
  - url: "https://ems-api"
paths:
  /api/employees/create:
    post:
      summary: "POST api/employees/create"
      operationId: "createEmployee"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EmployeeDto"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "string"
  /api/employees/{id}:
    get:
      summary: "GET api/employees/{id}"
      operationId: "getEmployeeById"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/EmployeeDto"
  /api/employees/{id}/update:
    put:
      summary: "PUT api/employees/{id}/update"
      operationId: "updateEmployee"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EmployeeDto"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/EmployeeDto"

  /api/employees/{id}/delete:
    delete:
      summary: "DELETE api/employees/{id}/delete"
      operationId: "deleteEmployee"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "string"

components:
  schemas:
    EmployeeDto:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        firstName:
          type: "string"
        lastName:
          type: "string"
        email:
          type: "string"
        departmentId:
          type: "integer"
          format: "int64"